version: "3.9"
volumes:
  php-fpm-socket:
  test-db-store:
  db-store:
  psysh-store:
  cache-redis-store:
services:
  app:
    build:
      context: .
      dockerfile: ./infra/docker/php/Dockerfile
      args:
        - DB_DATABASE=${DB_NAME:-laravel}
        - DB_USERNAME=${DB_USERNAME:-user}
        - DB_PASSWORD=${DB_PASSWORD:-secret}
        - DB_PORT=${DB_PORT:-3306}
        - USER_NAME=${USER_NAME:-ubuntu}
        - USER_ID=${USER_ID:-1000}
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_NAME:-laravel}
      - DB_USERNAME=${DB_USERNAME:-user}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - USER_NAME=${USER_NAME:-ubuntu}
      - USER_ID=${USER_ID:-1000}
    volumes:
      - type: volume
        source: php-fpm-socket
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./backend
        target: /home/${USER_NAME:-ubuntu}
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
    depends_on:
      - web
      - db
      - db-test
      - cache

  web:
    build:
      context: .
      dockerfile: ./infra/docker/nginx/Dockerfile
      args:
        - HTTPS_WEB_PORT=${HTTPS_WEB_PORT}
        - WEB_PORT=${WEB_PORT}
        - USER_NAME=${USER_NAME:-ubuntu}
        - USER_ID=${USER_ID:-1000}
    environment:
      - USER_NAME=${USER_NAME:-ubuntu}
      - USER_ID=${USER_ID:-1000}
    ports:
      - target: 443
        published: ${HTTPS_WEB_PORT:-443}
        protocol: tcp
        mode: host
      - target: 80
        published: ${WEB_PORT:-80}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: php-fpm-socket
        target: /var/run/php-fpm
        volume:
          nocopy: true
      - type: bind
        source: ./backend
        target: /home/${USER_NAME:-ubuntu}
      - type: bind
        source: ./infra/docker/nginx/templates
        target: /etc/nginx/templates/

  db:
    build:
      context: .
      dockerfile: ./infra/docker/mysql/Dockerfile
      args:
        - DB_PORT=${DB_PORT:-3306}
    ports:
      - target: 3306
        published: ${DB_PORT:-3306}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - MYSQL_DATABASE=${DB_NAME:-laravel}
      - MYSQL_USER=${DB_USERNAME:-user}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}

  db-test:
    build:
      context: .
      dockerfile: ./infra/docker/mysql/Dockerfile
      args:
        - DB_PORT=${TEST_DB_PORT:-3307}
    ports:
      - target: 3306
        published: ${TEST_DB_PORT:-3307}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: test-db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - MYSQL_DATABASE=${TEST_DB_NAME:-laravel}
      - MYSQL_USER=${TEST_DB_USERNAME:-user}
      - MYSQL_PASSWORD=${TEST_DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${TEST_DB_PASSWORD:-secret}

  cache:
    build:
      context: .
      dockerfile: ./infra/docker/cache/Dockerfile
      args:
        - REDIS_PASS=${REDIS_PASSWORD:-secret}
        - REDIS_PORT=${REDIS_PORT:-6379}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD:-secret}
    ports:
      - target: 6379
        published: ${REDIS_PORT:-6379}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: cache-redis-store
        target: /data
        volume:
          nocopy: true
    environment:
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASS=${REDIS_PASSWORD:-secret}
